Source: condor
Section: science
Priority: extra
Maintainer: Condor Developers <condor-debian@cs.wisc.edu>
Uploaders: Michael Hanke <mih@debian.org>, Brian Lin <blin@cs.wisc.edu>
Build-Depends: debhelper (>= 7.0.50~), po-debconf, cmake, libpq-dev,
 libcurl4-openssl-dev, zlib1g-dev, libglobus-gss-assist-dev,
 libglobus-gram-protocol-dev, libglobus-gram-client-dev,
 libglobus-gass-server-ez-dev, libglobus-ftp-client-dev, latex2html, transfig,
 libpcre3-dev, libboost-thread-dev, libboost-program-options-dev,
 libboost-system-dev, libboost-regex-dev, libboost-filesystem-dev,
 libexpat1-dev, libxml2-dev, libvirt-dev, zlib1g-dev, gcj-jdk | java-compiler,
 uuid-dev, chrpath, libldap2-dev | libldap-dev,
 help2man, gsoap (>= 2.7.17-1~), libboost-test-dev
Standards-Version: 3.9.4
Homepage: http://research.cs.wisc.edu/condor
Vcs-Browser: http://git.debian.org/?p=pkg-exppsy/condor.git
Vcs-Git: git://git.debian.org/git/pkg-exppsy/condor.git


Package: condor
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, ${python:Depends}, python,
 ${perl:Depends}, debconf (>= 0.5) | debconf-2.0, adduser, libdate-manip-perl
Recommends: dmtcp
Suggests: coop-computing-tools
Description: distributed workload management system
 Like other full-featured batch systems, Condor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to Condor;
 Condor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, Condor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. Condor
 does not require a shared file system across machines - if no shared file
 system is available, Condor can transfer the job's data files on behalf of
 the user.
 .
 This package can set up an appropriate initial configuration at install
 time for a machine intended either as a member of an existing Condor pool
 or as a "Personal" (single machine) Condor pool.


#Package: condor-tests
#Architecture: any
#Depends: ${misc:Depends}, ${shlibs:Depends}
#Description: distributed workload management system - test suite
# Like other full-featured batch systems, Condor provides a job queueing
# mechanism, scheduling policy, priority scheme, resource monitoring, and
# resource management. Users submit their serial or parallel jobs to Condor;
# Condor places them into a queue. It chooses when and where to run the jobs
# based upon a policy, carefully monitors their progress, and ultimately
# informs the user upon completion.
# .
# Unlike more traditional batch queueing systems, Condor can also effectively
# harness wasted CPU power from otherwise idle desktop workstations. Condor
# does not require a shared file system across machines - if no shared file
# system is available, Condor can transfer the job's data files on behalf of
# the user.
# .
# This package provides Condor's test-suite, which can be used to verify
# proper functioning of a Condor installation.


Package: condor-dev
Section: devel
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Description: distributed workload management system - development files
 Like other full-featured batch systems, Condor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to Condor;
 Condor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, Condor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. Condor
 does not require a shared file system across machines - if no shared file
 system is available, Condor can transfer the job's data files on behalf of
 the user.
 .
 This package provides headers and libraries for development of Condor add-ons.


Package: condor-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}
Description: distributed workload management system - documentation
 Like other full-featured batch systems, Condor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to Condor;
 Condor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, Condor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. Condor
 does not require a shared file system across machines - if no shared file
 system is available, Condor can transfer the job's data files on behalf of
 the user.
 .
 This package provides Condor's documentation in HTML and PDF format, as well
 as configuration and other examples.


Package: condor-dbg
Section: debug
Architecture: any
Depends: ${misc:Depends}, condor (= ${binary:Version})
Description: distributed workload management system - debugging symbols
 Like other full-featured batch systems, Condor provides a job queueing
 mechanism, scheduling policy, priority scheme, resource monitoring, and
 resource management. Users submit their serial or parallel jobs to Condor;
 Condor places them into a queue. It chooses when and where to run the jobs
 based upon a policy, carefully monitors their progress, and ultimately
 informs the user upon completion.
 .
 Unlike more traditional batch queueing systems, Condor can also effectively
 harness wasted CPU power from otherwise idle desktop workstations. Condor
 does not require a shared file system across machines - if no shared file
 system is available, Condor can transfer the job's data files on behalf of
 the user.
 .
 This package provides the debugging symbols for Condor.


Package: libclassad-dev
Replaces: libclassad0-dev
Conflicts: libclassad0-dev
Section: libdevel
Architecture: any
Depends: libclassad5 (= ${binary:Version}), ${misc:Depends}
Description: Condor classads expression language - development library
 Classified Advertisements (classads) are the lingua franca of Condor, used for
 describing jobs, workstations, and other resources. There is a protocol for
 evaluating whether two classads match, which is used by the Condor central
 manager to determine the compatibility of jobs, and workstations where they
 may be run.
 .
 This package provides the static library and header files.


Package: libclassad5
Replaces: libclassad3
Conflicts: libclassad3
Section: libs
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Condor classads expression language - runtime library
 Classified Advertisements (classads) are the lingua franca of Condor, used for
 describing jobs, workstations, and other resources. There is a protocol for
 evaluating whether two classads match, which is used by the Condor central
 manager to determine the compatibility of jobs, and workstations where they
 may be run.
 .
 This package provides the runtime library.


